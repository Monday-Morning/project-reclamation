name: Staging CI/CD

on:
  push:
    branches: [main]
    paths:
      - "server/**"

permissions:
  actions: read
  checks: read
  contents: read
  deployments: write
  issues: write
  discussions: write
  packages: write
  pull-requests: write
  repository-projects: read
  security-events: write
  statuses: read

jobs:
  setup:
    uses: Monday-Morning/project-reclamation/.github/workflows/setup.yml@main
    runs-on: ubuntu-latest
    with:
      setup_dev: true

  eslint:
    needs: setup
    uses: Monday-Morning/project-reclamation/.github/workflows/eslint.yml@main
    runs-on: ubuntu-latest
    with:
      config_path: ./.eslintrc.yml
      ignore_path: ./.eslintignore
      file_path: 'server/'

  prettier:
    needs: setup
    uses: Monday-Morning/project-reclamation/.github/workflows/prettier.yml@main
    runs-on: ubuntu-latest
    with:
      file_pattern: './server/.'
      config_path: './.prettierrc.yml'
      ignore_path: './.prettierignore'
      fail_on_error: true

  mocha:
    needs: [eslint, prettier]
    uses: Monday-Morning/project-reclamation/.github/workflows/mocha.yml@main
    runs-on: ubuntu-latest
    with:
      package_path: ./server/package.json

  analyze:
    needs: [eslint, prettier]
    uses: Monday-Morning/project-reclamation/.github/workflows/analyze.yml@main
    runs-on: ubuntu-latest

  build:
    needs: [mocha, analyze]
    uses: Monday-Morning/project-reclamation/.github/workflows/build.yml@main
    runs-on: ubuntu-latest
    with:
      node_env: staging
      image_name: ${{ github.repository }}
      registry: ghcr.io
      context: .
      dockerfile: ./Dockerfile
      is_latest: true
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
